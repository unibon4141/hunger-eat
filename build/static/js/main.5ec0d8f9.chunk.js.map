{"version":3,"sources":["App.js","index.js"],"names":["menu","a","urls","cnt","dupCnt","fetch","response","json","data","i","length","image","push","Image","pic","className","src","alt","Gallery","props","map","url","App","useState","setUrls","useEffect","fetchImages","then","id","href","render","document","querySelector"],"mappings":"qMAGA,WAA2BA,GAA3B,yBAAAC,EAAA,sDACQC,EAAO,GACTC,EAAM,EAFZ,YAGSA,EAAM,IAHf,wBAIQC,EAAS,EAJjB,SAM2BC,MAAM,gDAAD,OACsBL,IAPtD,cAMUM,EANV,gBAWuBA,EAASC,OAXhC,OAYI,IADMC,EAXV,OAYaC,EAAI,EAAGA,EAAIP,EAAKQ,OAAQD,IAC3BP,EAAKO,KAAOD,EAAKG,OACnBP,IAGCA,IACHD,IACAD,EAAKU,KAAKJ,EAAKG,QAnBrB,gDAuBST,GAvBT,6C,sBAyDA,SAASW,EAAMC,GACb,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKF,EAAIE,IAAKC,IAAI,OAAOF,UAAU,cAKhD,SAASG,EAAQC,GAEf,IAAQjB,EAASiB,EAATjB,KACR,OAAa,OAATA,EAEA,8BACE,mBAAGa,UAAU,UAAb,0BAOJb,EAAKkB,KAAI,SAACC,GACR,OACE,8BACE,cAACR,EAAD,CAAOG,IAAKK,SAQPC,MAhEf,WACE,MAAsBC,mBAAS,MAA/B,mBAAKrB,EAAL,KAAWsB,EAAX,KAUA,OATAC,qBAAU,Y,4CAERC,CAAY,SAASC,MAAK,SAACN,GAGzBG,EAFAtB,EAAOmB,QAIR,IAGD,gCACE,iCACE,qBAAKN,UAAU,YAAf,SACE,4FAGJ,sBAAMa,GAAG,OAAT,SACE,qBAAKb,UAAU,kBAAf,SACE,cAACG,EAAD,CAAShB,KAAMA,QAGnB,yBAAQ0B,GAAG,SAAX,uDACS,mBAAGC,KAAK,8CAAR,yBADT,gECjDNC,iBAAO,cAAC,EAAD,IAASC,SAASC,cAAc,e","file":"static/js/main.5ec0d8f9.chunk.js","sourcesContent":["// useState:コンポーネントの状態を管理できる。\r\nimport { useEffect, useState } from \"react\";\r\n// import { fetchImages } from \"./api\";\r\nasync function fetchImages(menu) {\r\n  const urls = [];\r\n  let cnt = 0;\r\n  while (cnt < 10) {\r\n    let dupCnt = 0;\r\n    // awaitをつけると実行が終わるまで待ってくれる\r\n    const response = await fetch(\r\n      `https://foodish-api.herokuapp.com/api/images/${menu}`\r\n    )\r\n    // console.log(response);\r\n    // jsonとして読み込む\r\n    const data = await response.json();\r\n    for (let i = 0; i < urls.length; i++) {\r\n      if (urls[i] === data.image) {\r\n        dupCnt++;\r\n      }\r\n    }\r\n    if (!dupCnt) {\r\n      cnt++;\r\n      urls.push(data.image);\r\n    }\r\n\r\n  }\r\n  return urls;\r\n}\r\n\r\nfunction App() {\r\n  let [urls, setUrls] = useState(null);\r\n  useEffect(() => {\r\n\r\n    fetchImages(\"pizza\").then((url) => {\r\n      urls = url;\r\n      // console.log(url);\r\n      setUrls(urls);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"container\">\r\n          <h1>食欲を満たすサイト</h1>\r\n        </div>\r\n      </header>\r\n      <main id=\"main\">\r\n        <div className=\"container cards\">\r\n          <Gallery urls={urls} />\r\n        </div>\r\n      </main>\r\n      <footer id=\"footer\">\r\n        このサイトでは<a href=\"https://github.com/surhud004/Foodish#readme\">Foodish API</a>を利用しています。\r\n    </footer>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction Image(pic) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-image\">\r\n        <img src={pic.src} alt=\"food\" className=\"pizza\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction Gallery(props) {\r\n  // 分割代入\r\n  const { urls } = props;\r\n  if (urls === null) {\r\n    return (\r\n      <div>\r\n        <p className=\"loading\">\r\n          Loading...\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    urls.map((url) => {\r\n      return (\r\n        <div>\r\n          <Image src={url} />\r\n        </div>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\n\r\nexport default App;","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}